{"version":3,"sources":["main.js"],"names":["getCSS","onclick","request","XMLHttpRequest","open","onreadystatechange","console","log","readyState","status","style","document","createElement","innerHTML","response","head","appendChild","alert","send","getJS","script","body","getHTML","div","getXML","responseXML","dom","text","getElementsByTagName","textContent","getJSON","object","JSON","parse","myName","name"],"mappings":"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","file":"main.1f19ae8e.js","sourceRoot":"..\\public","sourcesContent":["getCSS.onclick = () => {\r\n  const request = new XMLHttpRequest();\r\n\r\n  request.open(\"get\", \"/style.css\"); //readyState=1\r\n\r\n  request.onreadystatechange = () => {\r\n    console.log(request.readyState);\r\n    //当statechange发生变化，就会调用这个函数\r\n    if (request.readyState === 4) {\r\n      console.log(\"下载完成\");\r\n      if (request.status >= 200 && request.status < 300) {\r\n        const style = document.createElement(\"style\");\r\n        style.innerHTML = request.response;\r\n        document.head.appendChild(style);\r\n      } else {\r\n        alert(\"加载CSS失败\");\r\n      }\r\n    }\r\n  };\r\n  request.send();\r\n};\r\ngetJS.onclick = () => {\r\n  const request = new XMLHttpRequest();\r\n\r\n  request.open(\"get\", \"/2.js\");\r\n\r\n  request.onreadystatechange = () => {\r\n    console.log(request.readyState);\r\n    //当statechange发生变化，就会调用这个函数\r\n    if (request.readyState === 4) {\r\n      console.log(\"下载完成\");\r\n      if (request.status >= 200 && request.status < 300) {\r\n        const script = document.createElement(\"script\");\r\n        script.innerHTML = request.response;\r\n        document.body.appendChild(script);\r\n      } else {\r\n        alert(\"加载CSS失败\");\r\n      }\r\n    }\r\n  };\r\n\r\n  request.send();\r\n};\r\ngetHTML.onclick = () => {\r\n  const request = new XMLHttpRequest();\r\n\r\n  request.open(\"get\", \"/2.html\");\r\n  request.onreadystatechange = () => {\r\n    console.log(request.readyState);\r\n    //当statechange发生变化，就会调用这个函数\r\n    if (request.readyState === 4) {\r\n      console.log(\"下载完成\");\r\n      if (request.status >= 200 && request.status < 300) {\r\n        const div = document.createElement(\"div\");\r\n        div.innerHTML = request.response;\r\n        document.body.appendChild(div);\r\n      } else {\r\n        alert(\"加载CSS失败\");\r\n      }\r\n    }\r\n  };\r\n\r\n  request.send();\r\n};\r\ngetXML.onclick = () => {\r\n  const request = new XMLHttpRequest();\r\n\r\n  request.open(\"get\", \"/4.xml\");\r\n  request.onreadystatechange = () => {\r\n    console.log(request.readyState);\r\n    //当statechange发生变化，就会调用这个函数\r\n    if (request.readyState === 4) {\r\n      console.log(\"下载完成\");\r\n      if (request.status >= 200 && request.status < 300) {\r\n        console.log(request.response);\r\n        console.log(request.responseXML); //如果请求xml，那么就不要用response来获得响应体，用responseXML，这样获得的响应体会自动变成一个dom对象，我们就可以用DOM操作这个XML DOM对象了（DOM让HTML成为一个对象，也让XML成为一个对象）\r\n        const dom = request.responseXML;\r\n        const text = dom.getElementsByTagName(\"body\")[0].textContent;\r\n        console.log(text);\r\n      } else {\r\n        alert(\"加载CSS失败\");\r\n      }\r\n    }\r\n  };\r\n\r\n  request.send();\r\n};\r\ngetJSON.onclick = () => {\r\n  const request = new XMLHttpRequest();\r\n  request.open(\"get\", \"/5.json\");\r\n  request.onreadystatechange = () => {\r\n    if (\r\n      request.readyState === 4 &&\r\n      request.status >= 200 &&\r\n      request.status < 300\r\n    ) {\r\n      console.log(request.response);\r\n      const object = JSON.parse(request.response); //用JSON的parse函数可以把符合json语法的东西变成对象或者xx\r\n      console.log(object);\r\n      myName.textContent = object.name;\r\n    }\r\n  };\r\n  request.send();\r\n};\r\n"]}